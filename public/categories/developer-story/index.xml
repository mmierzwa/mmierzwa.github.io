<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer Story on byteloom - Marek Mierzwa</title>
    <link>http://localhost:1313/categories/developer-story/</link>
    <description>Recent content in Developer Story on byteloom - Marek Mierzwa</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copy, _right?_ :thinking_face:</copyright>
    <lastBuildDate>Tue, 04 Apr 2017 22:56:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/developer-story/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AAPT: Unknown option &#39;--no-version-vectors&#39;</title>
      <link>http://localhost:1313/blog/aapt-unknown-option-no-version-vectors/</link>
      <pubDate>Tue, 04 Apr 2017 22:56:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/aapt-unknown-option-no-version-vectors/</guid>
      <description>&lt;p&gt;If you ever encountered the error &lt;code&gt;AAPT: Unknown option &#39;--no-version-vectors&#39;&lt;/code&gt; during the Xamarin build you probably found &lt;a href=&#34;https://forums.xamarin.com/discussion/63482/aapt-error-unknown-option-no-version-vectors&#34; target=&#34;_blank&#34; rel=&#34;noreferrer&#34;&gt;this page&lt;/a&gt; looking for a solution. Like I did. Then you probably first tried setting &lt;code&gt;AndroidSdkBuildToolsVersion&lt;/code&gt; to the latest you have. Just like me. Or uninstall all the older versions. If this didn&amp;rsquo;t work (like in my case) stay with me.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Under the hood</title>
      <link>http://localhost:1313/blog/under-the-hood/</link>
      <pubDate>Thu, 18 Aug 2016 18:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/under-the-hood/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s always good to have static code analysis in your build process. I guess no one these days argues with this statement. This usually forces developer to make conscious decisions on code-level performance, reliability, security, design etc. Few times CA warnings saved me from producing a quite nasty bugs. Sometimes however FxCop yields some really strange stuff.&lt;br&gt;&#xA;This post will describe the one I stuck with some time ago. But more interestingly it shows that sometimes .Net developer must look deep under the hood of high-level language abstraction to solve certain issues.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
